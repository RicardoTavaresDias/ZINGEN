
/* Classe de espaçamento interno para definir no dispositivo maior e menor com variavel */
.py-base {
  /* Espaçamento em cima e em baixo */
  padding-block: var(--py-base);
}

.py-lg {
  /* Espaçamento em cima e em baixo */
  padding-block: var(--py-lg);
}

.py-xl {
  padding-block: var(--py-xl);
}

.px-lg {
  /* Espaçamento em laterais esquerda e direita */
  padding-inline: var(--px-lg);
}


.container {
  --max-width: 375px;
  /* valor minimo px de 375px vai até 100% e para, tamanho flexivel vai subtrair - tamanho da font --px-lg: 1.5rem; * 2, aplicação para dispositivo maiores e o 375px ficará para dispositivo menores */
  width: min(var(--max-width), 100% - var(--fs-lg) * 2);

  /* Que seria a mesma coisa 
  width: min(var(--max-width), 100% - var(--fs-lg) * 2); */

  /* max-width: var(--max-width);
  width: calc(100% - val(--fs-lg) * 2); */

  margin-inline: auto;
  /* border: solid blueviolet; */
}


.desktop-only {
  display: none;
}

/* even segnifica colunas constante, na tela menor as div ficara um baixo do outro */
.even-columns {
  /* Aqui já deixa as div um baixo do outro */
  display: grid; /*horizontal*/
  gap: 1rem;
}

.flex {
  display: flex;
}

.items-center {
  align-items: center;
}

.gap-1 {
  gap: 1rem;
}

.gap-1\.5 {
  gap: 1.5rem;
}

.grid {
  display: grid;
}



@media (width >= 80em) {
  .container {
    --max-width: 80rem;
  }

  .desktop-only {
    display: initial;
  }

  /* even segnifica colunas constante, na tela maiores as div ficara um do lado do outro */
  .even-columns {
    /* Aqui já deixa as div um do lado do outro */
    grid-auto-flow: column; /*vertical*/
    grid-auto-columns: 1fr;
  }
}